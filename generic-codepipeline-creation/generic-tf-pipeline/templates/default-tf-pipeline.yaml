AWSTemplateFormatVersion: "2010-09-09"
Description: "Main template for a CI/CD Serverless application."
Parameters:
  AppName:
    Type: String
    Description: Name of the application.
    MinLength: "1"
    MaxLength: "80"
    AllowedPattern: "[A-Za-z0-9-]+"
    ConstraintDescription: Malformed input parameter. AppName must only contain upper and lower case letters, numbers, and -.
  CodeBuildImage:
    Type: String
    Default: "aws/codebuild/standard:7.0"
    Description: Image used for CodeBuild project.
  BuildSpecFileNameForPlan:
    Type: String
    Description: Name of buildspec file for CodeBuild project.
  BuildSpecFileNameForApply:
    Type: String
    Description: Name of buildspec file for CodeBuild project.
  GitHubRepoName:
    Type: String
    Description: The GitHub repo name
  GitHubRepoBranch:
    Type: String
    Description: The GitHub repo branch code pipelines should watch for changes on.
  GitHubUser:
    Type: String
    Description: GitHub UserName. This username must have access to the GitHubToken.
  GitHubToken:
    NoEcho: true
    Type: String
    Description: "Secret. OAuthToken with access to Repo. Long string of characters and digits. Go to https://github.com/settings/tokens"
  RolesTemplateURL:
    Type: String
    Description: URL of the serverless roles template stored in S3.
  CodePipelineTemplateURL:
    Type: String
    Description: URL of the CodePipeline template stored in S3.
  CountryCode:
    Type: String
    Description: Country code environment variable.
  Environment:
    Type: String
    Description: Environment variable.
  DeploymentRegion:
    Type: String
    Description: Deployment Region environment variable.
  Project:
    Type: String
    Description: Project environment variable.
  VariableFilePath:
    Type: String
    Description: "Provide tfvars file path."
  StatefileBucket:
    Type: String
    Description: "Provide bucket name for Terraform Statefile storage."
  BucketObjectPath:
    Type: String
    Description: "Provide bucket object path where statefile will be stored."
  DynamoDBTableName:
    Type: String
    Description: "Provide DynamoDB Table Name for Terraform locking."
Resources:
  TerraformPlanBuild:
    Description: Creating AWS CodeBuild project
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub "Building stage for ${AppName}."
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: regionenv-cloudformation-artifacts
          - Name: CLOUDFRONT_DIST
            Value: E3QFZ52MZ35NN4
          - Name: COUNTRY_CODE
            Value: !Ref CountryCode
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: DEPLOYMENT_REGION
            Value: !Ref DeploymentRegion
          - Name: PROJECT
            Value: !Ref Project
          - Name: TF_VAR
            Value: !Ref VariableFilePath
          - Name: STATE_FILE_BUCKET
            Value: !Ref StatefileBucket
          - Name: STATE_FILE_PATH
            Value: !Ref BucketObjectPath
          - Name: DB_TABLE
            Value: !Ref DynamoDBTableName
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
      Name: !Sub "${AppName}-build-project"
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpecFileName
      Tags:
        - Key: app-name
          Value: !Ref AppName
      TimeoutInMinutes: 15
  TerraformApplyBuild:
    Description: Creating AWS CodeBuild project
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Description: !Sub "Building stage for ${AppName}."
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: regionenv-cloudformation-artifacts
          - Name: CLOUDFRONT_DIST
            Value: E3QFZ52MZ35NN4
          - Name: COUNTRY_CODE
            Value: !Ref CountryCode
          - Name: ENVIRONMENT
            Value: !Ref Environment
          - Name: DEPLOYMENT_REGION
            Value: !Ref DeploymentRegion
          - Name: PROJECT
            Value: !Ref Project
          - Name: TF_VAR
            Value: !Ref VariableFilePath
          - Name: STATE_FILE_BUCKET
            Value: !Ref StatefileBucket
          - Name: STATE_FILE_PATH
            Value: !Ref BucketObjectPath
          - Name: DB_TABLE
            Value: !Ref DynamoDBTableName
        Image: !Ref CodeBuildImage
        Type: LINUX_CONTAINER
      Name: !Sub "${AppName}-build-project"
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Ref BuildSpecFileName
      Tags:
        - Key: app-name
          Value: !Ref AppName
      TimeoutInMinutes: 15
  ProjectPipeline:
    DependsOn: [TerraformPlanBuild]
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AppName}-pipeline"
      RoleArn: !Ref CodePipelineRole
      Stages:
      - Name: Source
        Actions:
        - Name: source
          InputArtifacts: []
          ActionTypeId:
            Version: "1"
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
          OutputArtifacts:
          - Name: !Sub "${AppName}-SourceArtifact"
          Configuration:
            Repo: !Ref GitHubRepoName
            Branch: !Ref GitHubRepoBranch
            OAuthToken: !Ref GitHubToken
            Owner: !Ref GitHubUser
          RunOrder: 1
      - Name: Build
          Actions:
            - Name: terraform-plan
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: PlanArtifact
              Configuration:
                ProjectName: !Ref TerraformPlanBuild
        - Name: Approval
          Actions:
            - Name: manual-approval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Provider: Manual
                Version: "1"
        - Name: Deploy
          Actions:
            - Name: terraform-apply
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                #- Name: PlanArtifact
                - Name: SourceArtifact
              Configuration:
                ProjectName: !Ref TerraformApplyBuild
      ArtifactStore:
        Type: S3
        Location: regionenv-cloudformation-artifacts
