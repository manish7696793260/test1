AWSTemplateFormatVersion: "2010-09-09"
Description: Common resources for backend job deployment
Parameters:
  AppName:
    Type: String
    Description: Name of the application.
    MinLength: "1"
    MaxLength: "100"
Resources:
  CodeBuildTrustRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-codebuild-role"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
  CodeBuildRolePolicy:
    Type: AWS::IAM::Policy
    DependsOn: CodeBuildTrustRole
    Description: Setting IAM policy for the service role for AWS CodeBuild
    Properties:
      PolicyName: CodeBuildRolePolicy
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:GetBucketAcl
              - s3:GetBucketLocation
              - s3:PutBucketTagging
              - s3:TagResource
              - s3:UntagResource
              - s3:ListTagsForResource
            Resource:
              - !Sub "arn:aws:s3:::regionenv*"
            Effect: Allow
          - Effect: Allow
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/regionenv-*"
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:TagResource
          - Effect: Allow
            Resource:
              - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
          - Effect: Allow
            Resource:
              - !Sub "arn:aws:cloudfront:${AWS::Region}:${AWS::AccountId}:distribution/*"
            Action:
              - CloudFront:CreateInvalidation
      Roles: [!Ref CodeBuildTrustRole]
  CodePipelineTrustRole:
    Description: Creating service role in IAM for AWS CodePipeline
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-codepipeline-role"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
  CodePipelineRolePolicy:
    Type: AWS::IAM::Policy
    DependsOn: CodePipelineTrustRole
    Description: Setting IAM policy for the service role for AWS CodePipeline
    Properties:
      PolicyName: CodePipelineRolePolicy
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::regionenv*"
            Effect: Allow
          - Effect: Allow
            Resource:
              - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
          - Effect: Allow
            Action: codestar-connections:UseConnection
            Resource: "*"
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Resource: "*"
            Effect: Allow
          - Action:
              - cloudformation:DescribeStacks
              - cloudformation:DescribeChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:CreateChangeSet
              - cloudformation:ExecuteChangeSet
            Resource:
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/regionenv-*"
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/environment-*"
            Effect: Allow
          - Action:
              - iam:PassRole
            Resource: "*"
            Effect: Allow
          - Action:
              - s3:Get*
            Resource: "*"
            Effect: Allow
      Roles: [!Ref CodePipelineTrustRole]
Outputs:
  CodePipelineRole:
    Description: "Role for code pipeline"
    Value: !GetAtt CodePipelineTrustRole.Arn
  CodeBuildRole:
    Description: "Role for code build to build"
    Value: !GetAtt CodeBuildTrustRole.Arn
