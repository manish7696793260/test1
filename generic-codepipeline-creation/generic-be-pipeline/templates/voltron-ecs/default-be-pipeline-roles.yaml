AWSTemplateFormatVersion: "2010-09-09"
Description: IAM roles and policies for build and deployment phases including ECS, ECR, S3, WAF, API Gateway, and other resources.
Parameters:
  AppName:
    Type: String
    Description: Name of the application.
    MinLength: "1"
    MaxLength: "100"
Resources:
  CodeBuildTrustRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-codebuild-role"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
  CodeBuildRolePolicy:
    Type: AWS::IAM::Policy
    DependsOn: CodeBuildTrustRole
    Description: Setting IAM policy for the service role for AWS CodeBuild
    Properties:
      PolicyName: CodeBuildRolePolicy
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Resource:
              - !Sub "arn:aws:s3:::regionenv*"
              - !Sub "arn:aws:s3:::environment_variable*"
            Effect: Allow
          - Action:
              - ssm:PutParameter
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/regionenv*"
            Effect: Allow
          - Effect: Allow
            Resource:
              - !Sub "arn:aws:ses:${AWS::Region}:${AWS::AccountId}:identity/*"
            Action:
              - ses:SendEmail
          - Effect: Allow
            Action:
              - inspector2:*
            Resource: "*"
          - Effect: Allow
            Action:
              - ecr:*
            Resource:
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/regionenv*"
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/environment_variable*"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource: "*"
          - Effect: Allow
            Action:
              - logs:*
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/regionenv*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/environment_variable*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:regionenv*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:environment_variable*"
          - Effect: Allow
            Action:
              - ecs:*
            Resource:
              - !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/regionenv*"
              - !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/regionenv*"
              - !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/regionenv*"
              - !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:container-instance/regionenv*"
          - Effect: Allow
            Action:
              - ecs:DescribeTasks
              - ecs:DescribeTaskDefinition
            Resource: "*"
      Roles: [!Ref CodeBuildTrustRole]
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-cloudformation-role"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
  CloudFormationRolePolicy:
    Type: AWS::IAM::Policy
    DependsOn: CloudFormationTrustRole
    Description: Setting IAM policy for the service role for AWS CloudFormation
    Properties:
      PolicyName: CloudFormationRolePolicy
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
            Resource:
              - !Sub "arn:aws:apigateway:${AWS::Region}::/*"
            Effect: Allow
          - Action:
              - execute-api:*
            Resource:
              - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:regionenv*"
            Effect: Allow
          - Effect: Allow
            Action:
              - wafv2:AssociateWebACL
              - wafv2:DisassociateWebACL
              - wafv2:GetWebACL
              - wafv2:ListWebACLs
              - wafv2:ListResourcesForWebACL
            Resource:
              - !Sub "arn:aws:wafv2:${AWS::Region}:${AWS::AccountId}:*"
          - Effect: Allow
            Action:
              - ecs:*
            Resource:
              - !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/regionenv*"
              - !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:task-definition/regionenv*"
              - !Sub "arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:service/regionenv*"
          - Effect: Allow
            Action:
              - ecs:DeregisterTaskDefinition
            Resource: "*"
          - Effect: Allow
            Action:
              - ecr:*
            Resource:
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/regionenv*"
          - Effect: Allow
            Action:
              - ssm:GetParameters
            Resource:
              - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/regionenv*"
          - Effect: Allow
            Action:
              - logs:*
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/alr/regionenv*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/alr/environment_variable*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:regionenv*"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:environment_variable*"
          - Effect: Allow
            Resource:
              - !Sub "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:regionenv*"
              - !Sub "arn:aws:cloudwatch:${AWS::Region}:${AWS::AccountId}:alarm:environment_variable*"
            Action:
              - cloudwatch:*
          - Action:
              - cloudformation:CreateChangeSet
            Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:aws:transform*"
            Effect: Allow
          - Action:
              - iam:PassRole
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:role/*"
            Effect: Allow
          - Action:
              - ec2:CreateVpcEndpointServiceConfiguration
              - ec2:DeleteVpcEndpointServiceConfigurations
              - ec2:DescribeVpcEndpointServiceConfigurations
              - ec2:ModifyVpcEndpointServicePermissions
            Resource: "*"
            Effect: Allow
          - Action:
              - elasticloadbalancing:DescribeLoadBalancers
            Resource: "*"
            Effect: Allow
          - Effect: Allow
            Action:
              - events:*
            Resource:
              - !Sub "arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/regionenv*"
          - Effect: Allow
            Action:
              - wafv2:GetWebACLForResource
            Resource:
              - !Sub "arn:aws:wafv2:${AWS::Region}:${AWS::AccountId}:regional/webacl*"
          - Effect: Allow
            Action:
              - lambda:*
            Resource:
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:regionenv*"
          - Action:
              - SNS:SetTopicAttributes
              - SNS:Subscribe
              - SNS:Unsubscribe
              - SNS:SetSubscriptionAttributes
              - SNS:GetTopicAttributes
            Resource:
              - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:regionenv*"
            Effect: Allow
          - Action:
              - s3:*
            Resource:
              - !Sub "arn:aws:s3:::regionenv*"
            Effect: Allow
      Roles: [!Ref CloudFormationTrustRole]
  CodePipelineTrustRole:
    Description: Creating service role in IAM for AWS CodePipeline
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-codepipeline-role"
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
  CodePipelineRolePolicy:
    Type: AWS::IAM::Policy
    DependsOn: CodePipelineTrustRole
    Description: Setting IAM policy for the service role for AWS CodePipeline
    Properties:
      PolicyName: CodePipelineRolePolicy
      PolicyDocument:
        Statement:
          - Action:
              - s3:*
            Resource:
              - !Sub "arn:aws:s3:::regionenv*"
              - !Sub "arn:aws:s3:::environment_variable*"
            Effect: Allow
          - Effect: Allow
            Action: codestar-connections:UseConnection
            Resource:
              - !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/*"
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
            Resource:
              - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/*"
            Effect: Allow
          - Action:
              - cloudformation:DescribeStacks
              - cloudformation:DescribeChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:CreateChangeSet
              - cloudformation:ExecuteChangeSet
            Resource:
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/regionenv*"
              - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/environment_variable*"
            Effect: Allow
          - Action:
              - iam:PassRole
            Resource:
              - !Sub "arn:aws:iam::${AWS::AccountId}:role/*"
            Effect: Allow
          - Action:
              - s3:Get*
            Resource:
              - !Sub "arn:aws:s3:::regionenv*"
              - !Sub "arn:aws:s3:::environment_variable*"
            Effect: Allow
      Roles: [!Ref CodePipelineTrustRole]
Outputs:
  CodePipelineRole:
    Description: "Role for code pipeline"
    Value: !GetAtt CodePipelineTrustRole.Arn
  CloudformationDeployRole:
    Description: "Role for cloudformation to deploy with."
    Value: !GetAtt CloudFormationTrustRole.Arn
  CodeBuildRole:
    Description: "Role for code build to build"
    Value: !GetAtt CodeBuildTrustRole.Arn
