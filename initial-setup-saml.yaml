AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Omron-Common-Repo-Resources

Parameters:

  Stage:
    Description: An environment type for QA/Staging/Beta/Production
    Type: String
    AllowedValues: [ dev_global, qa_global, stg_global, prd_global, beta_global ]
    Default: qa_global

  EnvironmentType:
    Description: An environment type Develop/QA/Staging/Beta/Production.
    Type: String
    AllowedValues: [ dev, qa, stg, beta, prd ]
    Default: dev

  Environment:
    Description: An environment type Develop/QA/Staging/Beta/Production.
    Type: String
    AllowedValues: [ usdev, usqa, usstg, usbeta, usprd ]
    Default: usdev

  SpecificRegion:
    Description: Specific region for US/East-US
    Type: String
    AllowedValues: [ us, eu, east-us, east-eu ]
    Default: us
  
  NotificationEmailFrom:
    Description: Notification Email From
    Type: String

  ArnAcmCertificate:
    Description: ARN of the ACM certificate
    Type: String

  TermsDomainName:
    Description: Domain name of the terms file s3 URL
    Type: String
  
  TermsBucket:
    Description: Bucket name for terms.
    Type: String

  RouteTableID:
    Description: Route table ID for VPC gateway
    Type: String

  VPCID:
    Description: VPC ID
    Type: String

  SubNetID1:
    Description: Subnet id of the VPC
    Type: String

  SubNetID2:
    Description: Subnet id of the VPC
    Type: String

  WebACLId:
    Description: WAF ARN for terms bucket domain
    Type: String

  HighPriorityAlertMail:
    Description: Alert Email for DLQ handler
    Type: String

  PrivateSubnetID1:
    Description: Private subnet ID 1 for VPC configuration
    Type: String

  PrivateSubnetID2:
    Description: Private subnet ID 2 for VPC configuration
    Type: String

  SecurityGroupID:
    Description: Security group ID for VPC configuration
    Type: String
  
  LambdaRole:
    Description: Lambda excution role for Dev/QA/Staging/Beta/Production.
    Type: String
    AllowedValues: [ usdev-omron-foresight-be-common-lambda-role, usqa-omron-foresight-be-common-lambda-role, usstg-omron-foresight-be-common-lambda-role, usbeta-omron-foresight-be-common-lambda-role, service-role/lambda_basic_execution]
    Default: usdev-omron-foresight-be-common-lambda-role
  
  htmlFilePath:
    Description: SFTP File Path Location
    Type: String

  VitalsightReportIP:
    Description: IP address of static code analysis report service VS Platform
    Type: String

  VitalsightReportPORT: 
    Description: Port address of static code analysis report service VS Platform
    Type: String

  OFSReportIP:
    Description: IP address of static code analysis report service OFS Platform
    Type: String

  OFSReportPORT:
    Description: Port address of static code analysis report service VS Platform
    Type: String
  
Conditions: 

    CreateNotEastUS: !Not [!Equals [ !Ref SpecificRegion, east-us]]
    
    CreateDevPrd: !Or [!Equals [ !Ref EnvironmentType, dev], !Equals [!Ref EnvironmentType, prd]]

    CreatePrd: !Equals [!Ref EnvironmentType, prd]

    CreateDev: !Equals [!Ref EnvironmentType, dev]

Resources:
  #*********** Omron Operations Bucket Creation  *********
  OmronOperationsBucket:
    Type: 'AWS::S3::Bucket'
    Condition: CreateNotEastUS
    Properties:
      Tags:
        - 
          Key: "ohi:project"
          Value: "omron-operations"
        - 
          Key: "ohi:application"
          Value: "omron-common"        
        - 
          Key: "ohi:module"
          Value: "omron-operations-report"        
        - 
          Key: "ohi:environment"
          Value: !Sub ${EnvironmentType} 
      BucketName: !Sub ${EnvironmentType}-${SpecificRegion}-operations
      LifecycleConfiguration:
        Rules:
          - Id: delete-vs-automated-ut-reports
            Prefix: 'automated-ut-reports/vitalsight/'
            Status: Enabled
            ExpirationInDays: 90
          - Id: delete-mobile-automated-ut-reports
            Prefix: 'automated-ut-reports/mobile/'
            Status: Enabled
            ExpirationInDays: 90
          - Id: delete-eslint-reports
            Prefix: 'static-code-report/'
            Status: Enabled
            ExpirationInDays: 180

  # *********generate static report lambda Trigger************* #
  StaticCodeAnalysisReportTrigger:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Stage}_common_static_code_analysis_service_trigger
      Handler: index.handler
      Runtime: nodejs18.x
      CodeUri: ./static_code_analysis_service_trigger
      Description: This S3 trigger will be activated upon HTML file upload, sending a request to the Vitalsight or Mobile report server. The request will include the file path of the uploaded HTML file for processing.
      MemorySize: 512
      Timeout: 300
      Role:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${LambdaRole}
      Environment:
        Variables:
          REGION:
            Ref: AWS::Region
          STAGE: !Sub ${Stage}
          ENV: !Sub ${EnvironmentType}
          SOURCE_EMAIL: !Sub ${NotificationEmailFrom}
          DESTINATION_EMAIL: !Sub ${HighPriorityAlertMail}
          VITALSIGHT_IP: !Sub ${VitalsightReportIP}
          VITALSIGHT_PORT: !Sub ${VitalsightReportPORT}
          MOBILE_IP: !Sub ${OFSReportIP}
          MOBILE_PORT: !Sub ${OFSReportPORT}
      Tags:
        ohi:project: "omron-common"
        ohi:application: "common-static-code-analysis-service"
        ohi:module: "common-static-code-analysis-service-be"
        ohi:environment: !Sub ${EnvironmentType}
      VpcConfig:
        SecurityGroupIds:
          - !Sub ${SecurityGroupID}
        SubnetIds:
          - !Sub ${PrivateSubnetID1}
          - !Sub ${PrivateSubnetID2}
      Events:
        HtmlCreatedEvent:
          Type: S3
          Properties:
            Bucket: !Ref OmronOperationsBucket
            Events:
              - 's3:ObjectCreated:Put'
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: !Sub ${htmlFilePath}
                  - Name: suffix
                    Value: .html
  #*********** Omron terms Bucket *********
  OmronTermsBucket:
    Type: 'AWS::S3::Bucket'
    Condition: CreateDevPrd
    Properties:
      Tags:
        - 
          Key: "ohi:project"
          Value: "omron-operations"
        - 
          Key: "ohi:application"
          Value: "omron-common"
        - 
          Key: "ohi:module"
          Value: "omron-operations-terms"        
        - 
          Key: "ohi:environment"
          Value: !Sub ${EnvironmentType}
      BucketName: !Sub ${TermsBucket}

  #***** CloudFront Distribution for the terms bucket ******
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Condition: CreateDevPrd
    Properties:
      DistributionConfig:
        WebACLId: !Sub ${WebACLId}
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt OmronTermsBucket.DomainName
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        Aliases:
          - !Sub ${TermsDomainName}
        IPV6Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: false
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        ViewerCertificate:
          AcmCertificateArn: !Sub ${ArnAcmCertificate}
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
      Tags:
        - 
          Key: "ohi:project"
          Value: "omron-operations"
        - 
          Key: "ohi:application"
          Value: "omron-common"
        - 
          Key: "ohi:module"
          Value: "omron-operations-terms"        
        - 
          Key: "ohi:environment"
          Value: !Sub ${EnvironmentType} 

  #***** CloudFront Distribution Access Control ******
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Condition: CreateDevPrd
    Properties: 
      OriginAccessControlConfig:
        Description: Default Origin Access Control
        Name: !Sub ${EnvironmentType}-Common-OAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  #***** CloudFront Distribution Bucket Policy ******
  CloudFrontBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: CreateDevPrd
    Properties:
      Bucket: !Ref OmronTermsBucket
      PolicyDocument:
        Version: "2008-10-17"
        Id: PolicyForCloudFrontPrivateContent
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${TermsBucket}/*"
            Condition:
              StringEquals:
                "AWS:SourceArn": 
                  Fn::Join:
                    - ""
                    - - "arn:aws:cloudfront::"
                      - !Ref "AWS::AccountId"
                      - ":distribution/"
                      - !Ref "CloudFrontDistribution"

#***** S3 VPC Gateway endpoint for Non Prd ******
  S3GatewayEndpointNonPrd:
    Type: AWS::EC2::VPCEndpoint
    Condition: CreateDev
    Properties:
      VpcEndpointType: 'Gateway'
      VpcId: !Sub ${VPCID}
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:ListBucket'
              - 's3:GetObject'
              - 's3:ListBucketMultipartUploads'
              - 's3:AbortMultipartUpload'
              - 's3:ListMultipartUploadParts'
            Resource:
              - 'arn:aws:s3:::dev-us-operations'
              - 'arn:aws:s3:::dev-us-operations/*'
              - 'arn:aws:s3:::qa-us-operations'
              - 'arn:aws:s3:::qa-us-operations/*'
              - 'arn:aws:s3:::stg-us-operations'
              - 'arn:aws:s3:::stg-us-operations/*'
              - 'arn:aws:s3:::beta-us-operations'
              - 'arn:aws:s3:::beta-us-operations/*'
              - 'arn:aws:s3:::dev-global-user-profile'
              - 'arn:aws:s3:::dev-global-user-profile/*'
              - 'arn:aws:s3:::qa-global-user-profile'
              - 'arn:aws:s3:::qa-global-user-profile/*'
              - 'arn:aws:s3:::stg-user-profile'
              - 'arn:aws:s3:::stg-user-profile/*'
              - 'arn:aws:s3:::beta-user-profile'
              - 'arn:aws:s3:::beta-user-profile/*'
      RouteTableIds:
        - !Sub ${RouteTableID}


#***** S3 VPC Gateway endpoint for PRD ******
  S3GatewayEndpointPrd:
    Type: AWS::EC2::VPCEndpoint
    Condition: CreatePrd
    Properties:
      VpcEndpointType: 'Gateway'
      VpcId: !Sub ${VPCID}
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:PutObject'
              - 's3:ListBucket'
              - 's3:GetObject'
              - 's3:ListBucketMultipartUploads'
              - 's3:AbortMultipartUpload'
              - 's3:ListMultipartUploadParts'
            Resource:
              - 'arn:aws:s3:::prd-us-operations'
              - 'arn:aws:s3:::prd-us-operations/*'
              - 'arn:aws:s3:::prd-user-profile'
              - 'arn:aws:s3:::prd-user-profile/*'
      RouteTableIds:
        - !Sub ${RouteTableID}

  #***** DynamoDB VPC Gateway endpoint for non Prd ******
  DynamoDBGatewayEndpointNonPrd:
    Type: AWS::EC2::VPCEndpoint
    Condition: CreateDev
    Properties:
      VpcEndpointType: 'Gateway'
      VpcId: !Sub ${VPCID}
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.dynamodb'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:GetRecords'
              - 'dynamodb:ListTables'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:Query'
              - 'dynamodb:GetItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:DeleteItem'
            Resource:
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/dev_global_ofc_mobile'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/dev_global_ofc_master'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/dev_global_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/dev_global_non_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/dev_global_rpm*'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/qa_global_ofc_mobile'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/qa_global_ofc_master'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/qa_global_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/qa_global_non_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/qa_global_rpm*'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/stg_global_ofc_mobile'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/stg_global_ofc_master'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/stg_global_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/stg_global_non_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/stg_global_rpm*'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/beta_global_ofc_mobile'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/beta_global_ofc_master'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/beta_global_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/beta_global_non_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/beta_global_rpm*'
      RouteTableIds:
        - !Sub ${RouteTableID}

  #***** DynamoDB VPC Gateway endpoint for Prd ******
  DynamoDBGatewayEndpointPrd:
    Type: AWS::EC2::VPCEndpoint
    Condition: CreatePrd
    Properties:
      VpcEndpointType: 'Gateway'
      VpcId: !Sub ${VPCID}
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.dynamodb'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 'dynamodb:BatchGetItem'
              - 'dynamodb:DescribeTable'
              - 'dynamodb:GetRecords'
              - 'dynamodb:ListTables'
              - 'dynamodb:BatchWriteItem'
              - 'dynamodb:Query'
              - 'dynamodb:GetItem'
              - 'dynamodb:PutItem'
              - 'dynamodb:UpdateItem'
              - 'dynamodb:DeleteItem'
            Resource:
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/prd_global_ofc_mobile'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/prd_global_ofc_master'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/prd_global_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/prd_global_non_bp_readings'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/prd_global_rpm*'
      RouteTableIds:
        - !Sub ${RouteTableID}
